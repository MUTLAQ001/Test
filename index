<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>دليل التواصل</title>
    <meta name="description" content="دليل التواصل للوصول إلى مختلف الجهات والخدمات.">
    <meta name="theme-color" content="#0a0a0a">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Arabic:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    
    <style>
      :root {
        --primary-hue: 220; /* Default: Blue */
        --primary-sat: 90%;
        --primary-light: 65%;
        
        /* [IMPROVED] Harmonious Color System */
        --secondary-hue: calc(var(--primary-hue) + 40);
        --secondary-sat: calc(var(--primary-sat) - 10%);
        
        --primary: hsl(var(--primary-hue), var(--primary-sat), var(--primary-light));
        --primary-dark: hsl(var(--primary-hue), var(--primary-sat), calc(var(--primary-light) - 10%));
        --secondary: hsl(var(--secondary-hue), var(--secondary-sat), var(--primary-light));
        
        --bg: #0a0a0a;
        --bg-card: rgba(20, 20, 22, 0.75);
        --border: rgba(255, 255, 255, 0.1);
        --text-light: #f0f0f0;
        --text-medium: #a9a9b9;
        --font-body: "Cairo", sans-serif;
        --font-title: "IBM Plex Sans Arabic", sans-serif;
        
        --radius: 16px;
        --transition: 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        --transition-smooth:0.5s cubic-bezier(0.2,0.8,0.2,1);
      }
      * { margin: 0; padding: 0; box-sizing: border-box; -webkit-tap-highlight-color: transparent; }
      html { scroll-behavior: smooth; }
      
      ::-webkit-scrollbar { width: 8px; }
      ::-webkit-scrollbar-track { background: var(--bg); }
      ::-webkit-scrollbar-thumb { background: rgba(255, 255, 255, 0.1); border-radius: 4px; border: 2px solid transparent; background-clip: content-box; }
      ::-webkit-scrollbar-thumb:hover { background: rgba(255, 255, 255, 0.2); }

      @keyframes gradient-animation { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } }
      @keyframes scaleInUp { from { opacity: 0; transform: translateY(30px) scale(0.97); } to { opacity: 1; transform: translateY(0) scale(1); } }
      
      @keyframes move-aurora-1 { 0% { transform: translate(0, 0) rotate(0deg) scale(1); } 50% { transform: translate(25vw, 15vh) rotate(180deg) scale(1.3); } 100% { transform: translate(0, 0) rotate(360deg) scale(1); } }
      @keyframes move-aurora-2 { 0% { transform: translate(0, 0) rotate(0deg) scale(1.2); } 50% { transform: translate(-30vw, -20vh) rotate(-150deg) scale(1); } 100% { transform: translate(0, 0) rotate(-360deg) scale(1.2); } }

      body { font-family: var(--font-body); background-color: var(--bg); color: var(--text-medium); direction: rtl; overflow-x: hidden; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; transition: background-color var(--transition-smooth), color var(--transition-smooth); }
      .app-wrapper { min-height: 100vh; position: relative; padding: 3rem 1.5rem; display: flex; flex-direction: column; }
      
      .aurora-bg { position: fixed; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; z-index: -1; }
      .aurora-dot { position: absolute; border-radius: 50%; filter: blur(120px); transition: background-color .5s ease; opacity: 0.15; }
      .aurora-dot-1 { width: 60vmax; height: 60vmax; background-color: var(--primary); top: -20%; left: -20%; animation: move-aurora-1 30s infinite alternate ease-in-out; }
      .aurora-dot-2 { width: 55vmax; height: 55vmax; background-color: var(--secondary); bottom: -25%; right: -15%; animation: move-aurora-2 35s infinite alternate-reverse ease-in-out; animation-delay: -5s; }

      .container { width: 100%; max-width: 1200px; z-index: 1; margin: 0 auto; position: relative; display: flex; flex-direction: column; flex-grow: 1; }
      
      a, button { outline: none; }
      *:focus-visible { outline: 2px solid var(--primary); outline-offset: 3px; border-radius: 6px; }

      .page-header { text-align: center; margin-bottom: 2rem; animation: scaleInUp 0.8s ease .1s both; }
      .page-title { font-family: var(--font-title); font-weight: 700; font-size: clamp(2.8rem, 6vw, 4rem); margin-bottom: 0.75rem; background: linear-gradient(90deg, var(--primary), var(--secondary)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-size: 200% 200%; animation: gradient-animation 6s ease-in-out infinite; }
      .page-subtitle { color: var(--text-medium); font-size: clamp(1rem, 2vw, 1.25rem); animation: scaleInUp 0.8s ease .3s both; max-width: 600px; margin: 0 auto; line-height: 1.7; }
      
      .links-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 1.75rem; position: relative; flex-grow: 1; }
      .link-card { background: var(--bg-card); border: 1px solid var(--border); border-radius: var(--radius); padding: 2rem; backdrop-filter: blur(16px); -webkit-backdrop-filter: blur(16px); transition: transform 0.4s var(--transition), box-shadow 0.4s ease, opacity 0.4s ease, background-color var(--transition-smooth), border-color var(--transition-smooth); overflow: hidden; box-shadow: 0 10px 30px rgba(0,0,0,0.2), inset 0 1px 0 rgba(255,255,255,0.05); }
      .link-card.is-showing { animation: scaleInUp 0.5s cubic-bezier(0.2, 0.8, 0.2, 1) both; animation-delay: var(--animation-order, 0s); }
      
      .link-card:hover { transform: translateY(-8px) scale(1.02); box-shadow: 0 15px 35px rgba(0,0,0,0.3), 0 0 25px hsl(var(--primary-hue) var(--primary-sat) var(--primary-light) / 0.2), inset 0 1px 0 rgba(255,255,255,0.05); }
      .span-full-width { grid-column: 1 / -1; }

      .card-header { display: flex; align-items: center; gap: 1rem; margin-bottom: 2rem; padding-bottom: 1.25rem; border-bottom: 1px solid var(--border); }
      .card-header .icon { font-size: 1.8rem; color: var(--primary); transition: color var(--transition); }
      .card-title { font-family: var(--font-title); font-weight: 700; font-size: clamp(1.5rem, 4vw, 1.8rem); white-space: nowrap; color: var(--text-light); }
      .button-group { display: flex; flex-direction: column; gap: 1rem; }
      
      .link-button { display: flex; align-items: center; justify-content: center; gap: 1rem; padding: 0.9rem 1rem; border-radius: 10px; background: rgba(0, 0, 0, 0.3); border: 1px solid var(--border); color: var(--text-medium); text-decoration: none; font-weight: 600; font-size: 1rem; transition: var(--transition); }
      .link-button i { font-size: 1.2rem; transition: transform 0.2s ease; }
      .link-button:hover { transform: translateY(-3px); border-color: var(--primary); background: hsl(var(--primary-hue) var(--primary-sat) var(--primary-light) / 0.1); color: var(--text-light); }
      .link-button:hover i { transform: scale(1.1); }
      
      .page-footer { text-align: center; color: var(--text-medium); font-size: .9rem; display: flex; flex-wrap: wrap; justify-content: space-between; align-items: center; gap: 1rem; padding-top: 3rem; margin-top: auto; border-top: 1px solid var(--border); animation: scaleInUp 0.8s ease .6s both; }
      .footer-controls { display: flex; align-items: center; gap: 1.5rem; }
      .footer-link { color: var(--text-medium); transition: var(--transition); display: inline-flex; align-items: center; gap: 0.5rem; text-decoration: none; font-weight: 600; }
      .footer-link:hover { color: var(--text-light); transform: scale(1.05); }
      .footer-icon-btn { background: none; border: none; color: var(--text-medium); font-size: 1.5rem; cursor: pointer; transition: color var(--transition), transform var(--transition); padding: 0.25rem; }
      .footer-icon-btn:hover { color: var(--primary); transform: scale(1.1) rotate(15deg); }
      .footer-link svg { font-size: 1.5rem; transition: transform 0.3s ease; }
      .footer-link:hover svg { transform: scale(1.1); }
      
      /* --- Settings Modal Styles --- */
      .modal-overlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.5); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px); z-index: 1000; display: flex; justify-content: center; align-items: center; opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0.3s ease; }
      .modal-overlay.is-open { opacity: 1; visibility: visible; }
      .modal-content { background: var(--bg-card); border: 1px solid var(--border); border-radius: var(--radius); padding: 1.5rem; width: 90%; max-width: 400px; z-index: 1001; transform: scale(0.95); opacity: 0; transition: transform 0.3s ease, opacity 0.3s ease; position: relative; box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.4); }
      .modal-overlay.is-open .modal-content { transform: scale(1); opacity: 1; }
      .modal-close-btn { position: absolute; top: 1rem; left: 1rem; background: none; border: none; color: var(--text-medium); font-size: 1.8rem; cursor: pointer; transition: var(--transition); padding: 0.25rem; line-height: 1; }
      .modal-close-btn:hover { color: var(--text-light); transform: rotate(90deg); }
      .modal-header { font-family: var(--font-title); font-size: 1.5rem; color: var(--text-light); margin-bottom: 1.5rem; padding-bottom: 1rem; border-bottom: 1px solid var(--border); }
      .settings-content { display: flex; flex-direction: column; gap: 2rem; }
      .settings-item { display: flex; justify-content: space-between; align-items: center; }
      .settings-item h4 { font-family: var(--font-body); font-weight: 600; font-size: 1rem; color: var(--text-light); }
      .mode-toggle { display: flex; background: rgba(0,0,0,0.3); border: 1px solid var(--border); border-radius: 8px; padding: 4px; gap: 4px; }
      .mode-btn { padding: 0.4rem 1rem; border: none; border-radius: 6px; font-family: var(--font-body); font-size: 0.9rem; font-weight: 600; cursor: pointer; background: transparent; color: var(--text-medium); transition: all 0.2s ease; user-select: none; }
      .mode-btn.active { background-image: linear-gradient(45deg, var(--primary), var(--secondary)); color: #fff; box-shadow: 0 2px 10px hsl(var(--primary-hue) 100% 50% / 0.2); }
      .theme-picker { display: flex; gap: .75rem; align-items: center; }
      .theme-dot { width: 28px; height: 28px; border-radius: 50%; cursor: pointer; transition: transform .2s ease, box-shadow .2s ease; border: 2px solid transparent; }
      .theme-dot:hover { transform: scale(1.2); }
      .theme-dot.active { box-shadow: 0 0 0 2px var(--bg), 0 0 0 4px var(--primary); transform: scale(1.1); }
      .color-picker-label { position: relative; width: 28px; height: 28px; border-radius: 50%; cursor: pointer; transition: all .2s ease; border: 2px solid var(--border); user-select: none; overflow: hidden; background-color: transparent; }
      .color-picker-label:hover { transform: scale(1.2); }
      .color-picker-label.active { box-shadow: 0 0 0 2px var(--bg), 0 0 0 4px var(--primary); transform: scale(1.1); }
      .color-picker-input { position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; border: none; padding: 0; cursor: pointer; }

      /* Light Mode */
      .light-mode { --bg: #f5f9ff; --bg-card: rgba(255, 255, 255, 0.6); --border: hsl(var(--primary-hue) 50% 50% / 0.15); --text-light: #0d2a44; --text-medium: #4a6a88; --primary-sat: 80%; }
      .light-mode .aurora-dot { opacity: 0.4; filter: blur(140px); }
      .light-mode .link-card { box-shadow: 0 10px 30px -10px rgba(100, 140, 180, 0.2), 0 1px 2px rgba(0,0,0,0.02); backdrop-filter: blur(24px) saturate(150%); -webkit-backdrop-filter: blur(24px) saturate(150%); }
      .light-mode .link-button { background: hsl(var(--primary-hue) 60% 50% / 0.08); border-color: hsl(var(--primary-hue) 60% 50% / 0.2); color: var(--text-medium); }
      .light-mode .link-button:hover { color: var(--primary-dark); background: hsl(var(--primary-hue) 60% 50% / 0.15); border-color: hsl(var(--primary-hue) 60% 50% / 0.3); }
      .light-mode .mode-toggle { background: rgba(0,0,0,0.04); border-color: rgba(0,0,0,0.08); }
      
      @media (max-width: 600px) {
        .links-grid { grid-template-columns: 1fr; }
        .settings-item { flex-direction: column; align-items: flex-start; gap: 1rem; }
      }
    </style>
</head>
<body>
    <div class="app-wrapper">
        <div class="aurora-bg">
            <div class="aurora-dot aurora-dot-1"></div>
            <div class="aurora-dot aurora-dot-2"></div>
        </div>
        
        <div class="container">
            <header class="page-header">
                <h1 class="page-title">دليل التواصل</h1>
                <p class="page-subtitle">وسائل التواصل مع الجهات المختلفة.</p>
            </header>
            
            <main class="links-grid" id="links-grid"></main>

            <footer class="page-footer">
                <span class="footer-link">© <span id="currentYear"></span> | ظلام</span>
                <div class="footer-controls">
                    <button id="settings-btn" class="footer-icon-btn" title="الإعدادات" aria-label="الإعدادات">
                        <i class="fas fa-cog"></i>
                    </button>
                    <a href="https://t.me/mutlaq1" class="footer-link" target="_blank" rel="noopener noreferrer" title="تواصل معي على تليجرام" aria-label="تواصل معي على تليجرام">
                        <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 1.62 11.22c-.72-.24-.72-1.16 0-1.41l18.26-6.91c.63-.24 1.22.23 1.01.89L17.43 18.4c-.2 1.39-1.53 1.76-2.53.94l-4.26-3.51-2.86 2.72a.5.5 0 0 1-.88-.38v-4.48z"></path></svg>
                    </a>
                </div>
            </footer>
        </div>
    </div>
    
    <div class="modal-overlay" id="settings-modal">
        <div class="modal-content">
            <button class="modal-close-btn" id="modal-close-btn" title="إغلاق" aria-label="إغلاق"><i class="fas fa-times"></i></button>
            <h2 class="modal-header">الإعدادات</h2>
            <div class="settings-content">
                <div class="settings-item">
                    <h4>الوضع</h4>
                    <div class="mode-toggle">
                        <button class="mode-btn" data-mode="dark" role="button" aria-pressed="true">ظلام</button>
                        <button class="mode-btn" data-mode="light" role="button" aria-pressed="false">نهار</button>
                    </div>
                </div>
                <div class="settings-item">
                    <h4>اختر السمة</h4>
                    <div class="theme-picker" id="theme-picker-container">
                        <label for="custom-color-picker" class="color-picker-label" title="اختر لونًا مخصصًا">
                            <input id="custom-color-picker" type="color" class="color-picker-input" />
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- 1. DATA & CONFIGURATION ---
            const SITE_DATA = [
                {
                    title: 'قائمة الجهات',
                    icon: 'fa-address-book',
                    links: [
                        { href: "https://t.me/Qassim_R/223", icon: "fa-id-card", text: "عمادة القبول والتسجيل" },
                        { href: "https://t.me/Qassim_R/224", icon: "fa-headset", text: "مركز رعاية المستفيدين" },
                        { href: "https://t.me/Qassim_R/225", icon: "fa-building-columns", text: "شؤون الكليات" },
                        { href: "https://t.me/Qassim_R/226", icon: "fa-users", text: "عمادة شؤون الطلاب" },
                        { href: "https://t.me/Qassim_R/227", icon: "fa-file-invoice-dollar", text: "قسم المنح الداخلية" },
                        { href: "https://t.me/Qassim_R/228", icon: "fa-ellipsis-h", text: "أخرى" }
                    ]
                }
            ];
            
            const grid = document.getElementById('links-grid');

            // --- 2. DYNAMIC HTML GENERATION ---
            const createCardHTML = (cardData, index) => {
                const header = `<div class="card-header"><i class="fas ${cardData.icon} icon"></i><h2 class="card-title">${cardData.title}</h2></div>`;
                const createButtonGroup = links => `<div class="button-group">${links.map(link => `<a href="${link.href}" target="_blank" rel="noopener noreferrer" class="link-button"><i class="fas ${link.icon}"></i><span>${link.text}</span></a>`).join('')}</div>`;
                const body = createButtonGroup(cardData.links);
                
                return `<section class="link-card span-full-width is-showing" style="--animation-order: ${index * 100}ms;">${header}${body}</section>`;
            };

            // --- 3. SETTINGS MODAL & THEME ---
            const initSettingsModal = () => {
                const modal = document.getElementById('settings-modal'), openBtn = document.getElementById('settings-btn'), closeBtn = modal.querySelector('.modal-close-btn');
                openBtn.onclick = () => modal.classList.add('is-open');
                const closeModal = () => modal.classList.remove('is-open');
                closeBtn.onclick = closeModal;
                modal.addEventListener('click', e => { if (e.target === modal) closeModal(); });
                document.onkeydown = e => { if (e.key === 'Escape') closeModal(); };

                const modeButtons = modal.querySelectorAll('.mode-btn');
                const applyColorMode = mode => { document.body.classList.toggle('light-mode', mode === 'light'); document.querySelector('meta[name="theme-color"]').setAttribute('content', mode === 'light' ? '#f5f9ff' : '#0a0a0a'); localStorage.setItem('contact-links-colormode', mode); modeButtons.forEach(btn => { const isActive = btn.dataset.mode === mode; btn.classList.toggle('active', isActive); btn.setAttribute('aria-pressed', isActive.toString()); }); };
                modeButtons.forEach(btn => btn.onclick = () => applyColorMode(btn.dataset.mode));

                const PRESET_THEMES = { blue: '#5e9cff', purple: '#a777ff', green: '#00e676' };
                const themePickerContainer = document.getElementById('theme-picker-container'), customColorInput = document.getElementById('custom-color-picker'), customColorLabel = customColorInput.parentElement;
                const hexToHsl = H => { let r=0,g=0,b=0;if(H.length==4){r="0x"+H[1]+H[1];g="0x"+H[2]+H[2];b="0x"+H[3]+H[3];}else if(H.length==7){r="0x"+H[1]+H[2];g="0x"+H[3]+H[4];b="0x"+H[5]+H[6];}r/=255;g/=255;b/=255;let cmin=Math.min(r,g,b),cmax=Math.max(r,g,b),delta=cmax-cmin,h=0;if(delta==0)h=0;else if(cmax==r)h=((g-b)/delta)%6;else if(cmax==g)h=(b-r)/delta+2;else h=(r-g)/delta+4;h=Math.round(h*60);if(h<0)h+=360;return h;};
                
                const updateActiveThemeState = hexColor => { const isCustom = !Object.values(PRESET_THEMES).includes(hexColor); document.querySelectorAll('.theme-dot').forEach(dot => dot.classList.toggle('active', dot.dataset.color === hexColor)); customColorLabel.classList.toggle('active', isCustom); customColorLabel.style.backgroundColor = isCustom ? hexColor : 'transparent'; };
                const applyTheme = hex => { const root = document.documentElement; root.style.setProperty('--primary-hue', hexToHsl(hex)); localStorage.setItem('contact-links-theme', hex); customColorInput.value = hex; updateActiveThemeState(hex); };
                
                Object.entries(PRESET_THEMES).forEach(([name, color]) => { const dot = document.createElement('div'); dot.className = 'theme-dot'; dot.style.backgroundColor = color; dot.dataset.color = color; dot.title = name; dot.onclick = () => applyTheme(color); themePickerContainer.insertBefore(dot, customColorLabel); });
                customColorInput.addEventListener('input', e => applyTheme(e.target.value));

                const savedMode = localStorage.getItem('contact-links-colormode') || 'dark';
                const savedTheme = localStorage.getItem('contact-links-theme') || PRESET_THEMES.blue;
                applyColorMode(savedMode);
                applyTheme(savedTheme);
            };

            // --- 4. INITIALIZATION ---
            const initialize = () => {
                document.getElementById("currentYear").textContent = new Date().getFullYear();
                
                // Generate the HTML for the card(s)
                grid.insertAdjacentHTML('afterbegin', SITE_DATA.map(createCardHTML).join(''));
                
                // Initialize settings modal
                initSettingsModal();
            };

            initialize();
        });
    </script>
</body>
</html>
